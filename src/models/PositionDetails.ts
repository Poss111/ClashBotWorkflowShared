/* tslint:disable */
/* eslint-disable */
/**
 * Clash Bot Service
 * # Welcome to Clash Bot!   Where all of your League of Legends Clash scheduling needs are met!  ## Purpose  Clash Bot Webapp Service to support League of Legends Clash tournament scheduling with Discord.  ## Disclaimer  Clash-Bot is not endorsed by Riot Games and does not reflect the views or opinions of Riot Games or  anyone officially involved in producing or managing League of Legends. League of Legends and Riot Games  are trademarks or registered trademarks of Riot Games, Inc. League of Legends Â© Riot Games, Inc. 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: rixxroid@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Champions } from './Champions';
import {
    ChampionsFromJSON,
    ChampionsFromJSONTyped,
    ChampionsToJSON,
} from './Champions';
import type { Role } from './Role';
import {
    RoleFromJSON,
    RoleFromJSONTyped,
    RoleToJSON,
} from './Role';

/**
 * Details necessary to update a User's position on a Team with.
 * @export
 * @interface PositionDetails
 */
export interface PositionDetails {
    /**
     * 
     * @type {Champions}
     * @memberof PositionDetails
     */
    champions?: Champions;
    /**
     * 
     * @type {Role}
     * @memberof PositionDetails
     */
    role?: Role;
}

/**
 * Check if a given object implements the PositionDetails interface.
 */
export function instanceOfPositionDetails(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PositionDetailsFromJSON(json: any): PositionDetails {
    return PositionDetailsFromJSONTyped(json, false);
}

export function PositionDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PositionDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'champions': !exists(json, 'champions') ? undefined : ChampionsFromJSON(json['champions']),
        'role': !exists(json, 'role') ? undefined : RoleFromJSON(json['role']),
    };
}

export function PositionDetailsToJSON(value?: PositionDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'champions': ChampionsToJSON(value.champions),
        'role': RoleToJSON(value.role),
    };
}

