/* tslint:disable */
/* eslint-disable */
/**
 * Clash Bot Service
 * # Welcome to Clash Bot!   Where all of your League of Legends Clash scheduling needs are met!  ## Purpose  Clash Bot Webapp Service to support League of Legends Clash tournament scheduling with Discord.  ## Disclaimer  Clash-Bot is not endorsed by Riot Games and does not reflect the views or opinions of Riot Games or  anyone officially involved in producing or managing League of Legends. League of Legends and Riot Games  are trademarks or registered trademarks of Riot Games, Inc. League of Legends Â© Riot Games, Inc. 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: rixxroid@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * A League of Legends Clash Tournament
 * @export
 * @interface DetailedTournament
 */
export interface DetailedTournament {
    /**
     * The name of the Tournament.
     * @type {string}
     * @memberof DetailedTournament
     */
    tournamentName?: string;
    /**
     * The day number of the Tournament. [1-4]
     * @type {string}
     * @memberof DetailedTournament
     */
    tournamentDay?: string;
    /**
     * When the Tournament starts.
     * @type {Date}
     * @memberof DetailedTournament
     */
    startTime?: Date;
    /**
     * When you can register for the Tournament.
     * @type {Date}
     * @memberof DetailedTournament
     */
    registrationTime?: Date;
}

/**
 * Check if a given object implements the DetailedTournament interface.
 */
export function instanceOfDetailedTournament(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DetailedTournamentFromJSON(json: any): DetailedTournament {
    return DetailedTournamentFromJSONTyped(json, false);
}

export function DetailedTournamentFromJSONTyped(json: any, ignoreDiscriminator: boolean): DetailedTournament {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'tournamentName': !exists(json, 'tournamentName') ? undefined : json['tournamentName'],
        'tournamentDay': !exists(json, 'tournamentDay') ? undefined : json['tournamentDay'],
        'startTime': !exists(json, 'startTime') ? undefined : (new Date(json['startTime'])),
        'registrationTime': !exists(json, 'registrationTime') ? undefined : (new Date(json['registrationTime'])),
    };
}

export function DetailedTournamentToJSON(value?: DetailedTournament | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'tournamentName': value.tournamentName,
        'tournamentDay': value.tournamentDay,
        'startTime': value.startTime === undefined ? undefined : (value.startTime.toISOString()),
        'registrationTime': value.registrationTime === undefined ? undefined : (value.registrationTime.toISOString()),
    };
}

